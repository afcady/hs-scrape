-- Initial hs-scrape.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                hs-scrape
version:             0.1.0.0
synopsis:            Simple and easy web scraping and automation in Haskell.
description:         
    Shpider/mechanize inspired web automation with a focus on convenience for web scraping.
    .
    A fully functional example of logging into paypal and getting your account balance (<https://github.com/codygman/hs-scrape-paypal-login cabal buildable repo of this example>):
    .
    > import           Control.Applicative
    > import           Control.Monad
    > import           Control.Monad.IO.Class
    > import           Data.Maybe
    > import           Data.Monoid
    > import qualified Data.Text              as T
    > import           Data.Text.IO           (putStrLn)
    > import           Network.Scraper.State
    > import           Prelude                hiding (putStrLn)
    > import           Text.XML.Cursor        (attributeIs, content, element, ($//),
    >                                          (&/))
    > 
    > getPaypalBalance cursor = fromMaybe (error "Failed to get balance") $ listToMaybe $
    >                           cursor $//
    >                           element "div" >=> attributeIs "class" "balanceNumeral" &/
    >                           element "span" >=> attributeIs "class" "h2" &/
    >                           content
    > 
    > main = do
    >   runScraper $ do
    >     get "https://www.paypal.com/login"
    > 
    >     postToForm (Name "login_form") (Just creds) AllVisible
    > 
    >     get "https://www.paypal.com/myaccount/home"
    > 
    >     cursor <- liftM (fromMaybe (error "Couldn't get cursor")) getCurrentCursor
    >     liftIO . putStrLn $ "Your Paypal balance is: " <> getPaypalBalance cursor
    > 
    >   where creds =  [ ("login_email", "email@example.com") -- put your credentials here
    >                  , ("login_password", "password")]
    .
homepage:            https://github.com/codygman/hs-scrape/
bug-reports:         https://github.com/codygman/hs-scrape/issues
license:             MIT
license-file:        LICENSE
author:              Cody Goodman
maintainer:          codygman.consulting@gmail.com
-- copyright:           
category:            Web
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

library
  exposed-modules:     Network.Scraper.State
  -- other-modules:       
  -- other-extensions:    
  -- TODO: Sort out dependencies... no idea how to do this yet... for now set to exacts for wreq/lens
  build-depends:       base, bytestring, text, wreq, html-conduit, xml-conduit, safe, transformers, lens, containers, url, hspec, retry, data-default, exceptions
  hs-source-dirs:      src
  default-language:    Haskell2010

test-suite tests
  -- ghc-options:         -Wall
  type:                exitcode-stdio-1.0
  main-is:             Tests.hs
  hs-source-dirs:      tests
  build-depends:       base, tasty, hspec, tasty-hunit, hs-scrape, xml-conduit, containers
  default-language:    Haskell2010

source-repository head
  type: git
  location: https://github.com/codygman/hs-scrape
